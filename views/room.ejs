<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script>
        const ROOM_ID = "<%= roomId %>";
    </script>
    <script defer src="https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="script.js" defer></script>
    <title>Video Chat</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #1a1d29; 
            --secondary-color: #000000; 
            --button-color: #3a506b;
            --button-hover:  #0056b3;
            --border-radius: 8px;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--primary-color);
            color: #007bff;
            margin: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        /* HEADER */
        #header {
            background-color: var(--secondary-color);
            padding: 12px 24px;
            border-bottom: 1px solid #5f6368;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #header h2 {
            font-size: 20px;
            margin: 0;
        }

        /* VIDEO GRID */
        #video-grid {
            flex: 1;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 16px;
            padding: 24px;
            align-items: center;
            justify-items: center;
            overflow-y: auto;
        }

        video {
            width: 90%;
            height: 95%;
            object-fit: cover;
            display: block;
        }

        .video-placeholder {
            display: none;
            font-size: 80px;
            color: white;
        }

        .hidden {
            display: none;
        }

        /* CONTROLS */
        #controls {
            background-color: var(--secondary-color);
            padding: 12px 24px;
            border-top: 1px solid #5f6368;
            display: flex;
            justify-content: center;
            gap: 16px;
        }

        .control-btn {
            background-color: var(--button-color);
            color: white;
            border: none;
            padding: 12px 16px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: background-color 0.2s;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .control-btn:hover {
            background-color: var(--button-hover);
            color: black;
        }

        .control-btn.active {
            background-color: red;
            color: white;
        }

        /* RESPONSIVENESS */
        @media (max-width: 768px) {
            #video-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }

            .video-container {
                height: 200px;
            }

            .control-btn {
                padding: 8px 12px;
                font-size: 14px;
            }
        }

        @media (max-width: 480px) {
            #controls {
                flex-wrap: wrap;
                gap: 8px;
            }

            .control-btn {
                width: 100px;
                justify-content: center;
            }
        }

    </style>
</head>
<body>
    <div id="header">
        <h2>VideoChat</h2>
        <p>Room ID: <strong> <%= roomId %> </strong></p>
    </div>
    
    <div id="video-grid"></div>

    <div id="controls">
        <button id="mute-btn" class="control-btn">
            <i class="fas fa-microphone"></i> Mute
        </button>
        <button id="video-btn" class="control-btn">
            <i class="fas fa-video"></i> Stop Video
        </button>
        <button id="leave-btn" class="control-btn">
            <i class="fas fa-phone-slash"></i> Leave Room
        </button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const videoElement = document.getElementById("my-video");
            const videoPlaceholder = document.getElementById("video-placeholder");
            const videoBtn = document.getElementById("video-btn");
            const muteBtn = document.getElementById("mute-btn");

            let videoStream, audioStream;

            // Access User Media
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(stream => {
                    videoStream = stream;
                    videoElement.srcObject = stream;
                })
                .catch(err => console.error("Error accessing camera:", err));

            // Toggle Video
            videoBtn.addEventListener("click", () => {
                if (videoStream) {
                    let videoTrack = videoStream.getVideoTracks()[0];
                    videoTrack.enabled = !videoTrack.enabled;
                    
                    if (videoTrack.enabled) {
                        videoElement.classList.remove("hidden");
                        videoPlaceholder.style.display = "none";
                        videoBtn.innerHTML = '<i class="fas fa-video"></i> Stop Video';
                    } else {
                        videoElement.classList.add("hidden");
                        videoPlaceholder.style.display = "block";
                        videoBtn.innerHTML = '<i class="fas fa-video-slash"></i> Start Video';
                    }
                }
            });

            // Toggle Mute
            muteBtn.addEventListener("click", () => {
                if (videoStream) {
                    let audioTrack = videoStream.getAudioTracks()[0];
                    audioTrack.enabled = !audioTrack.enabled;

                    if (audioTrack.enabled) {
                        muteBtn.innerHTML = '<i class="fas fa-microphone"></i> Mute';
                    } else {
                        muteBtn.innerHTML = '<i class="fas fa-microphone-slash"></i> Unmute';
                    }
                }
            });
        });
    </script>
</body>
</html>